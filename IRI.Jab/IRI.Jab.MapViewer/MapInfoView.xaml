<UserControl x:Class="IRI.Jab.MapViewer.MapInfoView"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:IRI.Jab.MapViewer" x:Name="window">
    <UserControl.Resources>
        <Style  TargetType="{x:Type Button}" x:Key="circleButton">
            <Setter Property="Margin" Value="4"/>
            <Setter Property="Background" Value="{DynamicResource AccentColorBrush3}"/>
            <Setter Property="Width" Value="32"/>
            <Setter Property="Height" Value="32"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Grid>
                            <Ellipse Margin="1" Fill="{TemplateBinding Property=Background}"/>
                            <ContentPresenter/>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="{DynamicResource AccentColorBrush}"/>
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style  TargetType="{x:Type ToggleButton}" x:Key="circleToggle">
            <Setter Property="Margin" Value="4"/>
            <Setter Property="Background" Value="{DynamicResource AccentColorBrush3}"/>
            <Setter Property="Width" Value="32"/>
            <Setter Property="Height" Value="32"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                        <Grid>
                            <Ellipse Margin="1" Fill="{TemplateBinding Property=Background}"/>
                            <ContentPresenter/>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="{DynamicResource AccentColorBrush}"/>
                </Trigger>
                <Trigger Property="IsChecked" Value="True">
                    <Setter Property="Background" Value="{DynamicResource HighlightBrush}"/>
                </Trigger>
            </Style.Triggers>
        </Style>

    </UserControl.Resources>
    <Border CornerRadius="15" BorderThickness="2" MinWidth="200" VerticalAlignment="Top" HorizontalAlignment="Center" 
                    Background="{DynamicResource AccentColorBrush3}" BorderBrush="#77FFFFFF"  
                    Margin="4" Visibility="{Binding IsDrawEditMeasureMode, Converter={StaticResource boolToVisivilityConverter}}">
        <StackPanel>
            <DockPanel Margin="0" Visibility="{Binding IsDrawMode, Converter={StaticResource boolToVisivilityConverter}}">
                <Button Style="{StaticResource circleButton}" DockPanel.Dock="Right" HorizontalAlignment="Right" Margin="2" ToolTip="{Binding FinishDrawingText.Title}"
                            Command="{Binding FinishNewDrawingCommand}">
                    <Path Data="{StaticResource appbarCheck}" Stretch="Uniform" Margin="8" Fill="White" FlowDirection="LeftToRight"/>
                </Button>
                <Button Style="{StaticResource circleButton}" DockPanel.Dock="Right" HorizontalAlignment="Right" Margin="2" ToolTip="{Binding CancelDrawingText.Title}"
                            Command="{Binding CancelNewDrawingCommand}">
                    <Path Data="{StaticResource appbarClose}" Stretch="Uniform" Margin="8" Fill="White" FlowDirection="LeftToRight"/>
                </Button>
              
                <TextBlock Text="{Binding ElementName=window, Path=NewDrawingText.Title}" VerticalAlignment="Center" Margin="8,0" Foreground="White"/>
            </DockPanel>
            <DockPanel Margin="0" Visibility="{Binding IsEditMode, Converter={StaticResource boolToVisivilityConverter}}">
                 <StackPanel Orientation="Horizontal" HorizontalAlignment="Center" DataContext="{Binding CurrentEditingLayer}">
                    <TextBlock Text="{Binding Options.EditText}" VerticalAlignment="Center" Margin="8,0" Foreground="White"/>

                    <ToggleButton Style="{StaticResource circleToggle}" DockPanel.Dock="Right" HorizontalAlignment="Right" Margin="2" 
                            IsChecked="{Binding Options.IsEdgeLabelVisible, Mode=TwoWay}" Visibility="{Binding Options.IsMeasureButtonVisible, Converter={StaticResource boolToVisivilityConverter}, FallbackValue=Collapsed}">
                        <Path Data="{StaticResource appbarMeasureMeter}" Stretch="Uniform" Margin="8" Fill="White" FlowDirection="LeftToRight"/>
                    </ToggleButton>
                    
                    <Button Style="{StaticResource circleButton}" DockPanel.Dock="Right" HorizontalAlignment="Right" Margin="2" 
                            Command="{Binding FinishEditingCommand}" Visibility="{Binding Options.IsFinishButtonVisible, Converter={StaticResource boolToVisivilityConverter}, FallbackValue=Collapsed}">
                        <Path Data="{StaticResource appbarCheck}" Stretch="Uniform" Margin="8" Fill="White" FlowDirection="LeftToRight"/>
                    </Button>
                    <Button Style="{StaticResource circleButton}" DockPanel.Dock="Right" HorizontalAlignment="Right" Margin="2" 
                            Command="{Binding CancelEditingCommand}" Visibility="{Binding Options.IsCancelButtonVisible, Converter={StaticResource boolToVisivilityConverter}, FallbackValue=Collapsed}" >
                        <Path Data="{StaticResource appbarClose}" Stretch="Uniform" Margin="8" Fill="White" FlowDirection="LeftToRight"/>
                    </Button>
                    <Button Style="{StaticResource circleButton}" DockPanel.Dock="Right" HorizontalAlignment="Right" Margin="2" 
                            Command="{Binding DeleteCommand}" Visibility="{Binding Options.IsDeleteButtonVisible, Converter={StaticResource boolToVisivilityConverter}, FallbackValue=Collapsed}">
                        <Path Data="{StaticResource appbarDelete}" Stretch="Uniform" Margin="8" Fill="White" FlowDirection="LeftToRight"/>
                    </Button>
                   
                </StackPanel>
            </DockPanel>
            
            <!--<DockPanel Margin="0" Visibility="{Binding IsMeasureMode, Converter={StaticResource boolToVisivilityConverter}}">
                --><!--<TextBlock Text="اندازه‌گیری." VerticalAlignment="Center" Margin="8,0" Foreground="White"/>--><!--
                <Button Style="{StaticResource circleButton}" DockPanel.Dock="Right" HorizontalAlignment="Center" Margin="2"
                            Command="{Binding DeleteDrawingCommand}" >
                    <Path Data="{StaticResource appbarDelete}" Stretch="Uniform" Margin="8" Fill="White" FlowDirection="LeftToRight"/>
                </Button>
             
            </DockPanel>-->
            <DockPanel Margin="4,0">
                <TextBlock Text="X" Foreground="White" VerticalAlignment="Center" Margin="4"/>
                <TextBox Text="{Binding CurrentMapInfoPoint.X, Mode=TwoWay}" FlowDirection="LeftToRight" MinWidth="100" Margin="2" VerticalAlignment="Center"/>
                
                <TextBlock Text="Y" Foreground="White" VerticalAlignment="Center" Margin="4"/>
                <TextBox Text="{Binding CurrentMapInfoPoint.Y, Mode=TwoWay}" FlowDirection="LeftToRight" MinWidth="100" Margin="2" VerticalAlignment="Center"/>
                <Button Style="{StaticResource circleButton}" DockPanel.Dock="Left" HorizontalAlignment="Right" Margin="2" ToolTip="{Binding AddPointText.Title}"
                        Command="{Binding AddPointToNewDrawingCommand}" Visibility="{Binding IsDrawMode, Converter={StaticResource boolToVisivilityConverter}}">
                    <Path Data="{StaticResource appbarAdd}" Stretch="Uniform" Margin="8" Fill="White" FlowDirection="LeftToRight"/>
                </Button>
                <Button Style="{StaticResource circleButton}" DockPanel.Dock="Left" HorizontalAlignment="Right" Margin="2" ToolTip="{Binding FinishDrawingPartText.Title}"
                        Command="{Binding FinishDrawingPartCommand}" Visibility="{Binding IsDrawMode, Converter={StaticResource boolToVisivilityConverter}}">
                    <Path Data="{StaticResource appbarVectorPenAdd}" Stretch="Uniform" Margin="8" Fill="White" FlowDirection="LeftToRight"/>
                </Button>
            </DockPanel>
        </StackPanel>
    </Border>
</UserControl>
